{"version":3,"sources":["components/Modal.js","components/Button.js","components/WelcomeModal.js","components/GameOverModal.js","components/Table.js","components/RecordModal.js","App.js","serviceWorker.js","index.js"],"names":["Modal","_ref","children","ReactDOM","createPortal","react_default","a","createElement","className","document","getElementById","Button","onClick","message","color","concat","WelcomeModal","gameStarted","components_Modal","components_Button","GameOverModal","gameFinished","score","showRecord","RecordModal","temporaryDiretion","initialPositionX","initialPositionY","positionX","positionY","scores","playgameagain","index_es","icon","faTimes","map","item","index","SPEED","firstDirectionGrowth","initialTable","y","x","lostTable","console","log","Table","state","direction","body","food","lost","validateBody","dirGrowthCurrent","Math","floor","random","initialBody","toString","i","_this","filterDirection","_this$updatePosition","updatePosition","_this$updatePosition2","Object","slicedToArray","attachToBodyArray","componentDidUpdate","setState","getNewFood","foodIndex","match","updatedTable","includes","length","keyDownHandler","key","posibleDirection","convertKeytoDirection","deleteOpositeDirection","onStartHandler","onFinishedHandler","_this$validateBody","_this$validateBody2","timerID","setInterval","timeOutHandler","onShowRecordHandler","onPlayAgainHandled","lastDirection","dirGrowthFiltered","X","this","closureFunction","allowedDirection","filter","num","dirGrowth","initialPosition","valueCase1","valueCase2","directionDeleted1","directionDeleted2","bodyArray","addBlock","XYCoordinate","toConsumableArray","slice","_this2","_this$validateBody3","_this$validateBody4","addEventListener","_this$updatePosition3","_this$updatePosition4","clearInterval","_this3","filteredTable","Fragment","components_WelcomeModal","components_GameOverModal","components_RecordModal","Component","App","Table_Table","Boolean","window","location","hostname","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3b1f61a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/modal.css\";\r\n\r\nfunction Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"Modal\">{children}</div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nfunction Button({ onClick, message, color }) {\r\n  return (\r\n    <button\r\n      className={`Button ${color}`}\r\n      onClick={() => {\r\n        onClick();\r\n      }}\r\n    >\r\n      {message}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport \"./styles/button.css\";\r\nimport \"./styles/welcomemodal.css\";\r\nimport Button from \"./Button\";\r\n\r\nfunction WelcomeModal({ gameStarted }) {\r\n  return (\r\n    <Modal>\r\n      <div className=\"WelcomeModal-modal-box\">\r\n        <h1 className=\"WelcomeModal-title\">Hola!! Bienvenido al juego snake</h1>\r\n        <Button\r\n          color=\"soft-blue\"\r\n          message=\"Empezar el Juego!\"\r\n          onClick={() => gameStarted()}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default WelcomeModal;\r\n","import React from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport \"./styles/button.css\";\r\nimport \"./styles/gameovermodal.css\";\r\nimport Button from \"./Button\";\r\n\r\nfunction GameOverModal({ gameFinished, score, showRecord }) {\r\n  return (\r\n    <Modal>\r\n      <div className=\"GameOverModal-modal-box\">\r\n        <h1 className=\"GameOverModal-title\">Perdiste!!! :( </h1>\r\n        <h1 className=\"GameOverModal-subTitle\">\r\n          {\" \"}\r\n          {`Obtuviste ${score} ${score === 1 ? \"punto\" : \"puntos\"}`}{\" \"}\r\n        </h1>\r\n        <Button\r\n          color=\"strong-blue\"\r\n          message=\"Juega Otra vez!\"\r\n          onClick={() => gameFinished()}\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          message=\"Ver puntuación\"\r\n          onClick={() => showRecord()}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default GameOverModal;\r\n","import React, { Component } from \"react\";\r\nimport \"./styles/table.css\";\r\nimport WelcomeModal from \"./WelcomeModal\";\r\nimport GameOverModal from \"./GameOverModal\";\r\nimport RecordModal from \"./RecordModal\";\r\n\r\nconst SPEED = 150; //Reverse, the lower, the faster\r\nlet temporaryDiretion;\r\nlet firstDirectionGrowth = 10;\r\nlet initialPositionX, initialPositionY;\r\nlet positionX, positionY;\r\nvar index = 0;\r\nvar initialTable = [];\r\nlet score = 0;\r\nfor (let y = 0; y < 16; y++) {\r\n  for (let x = 0; x < 16; x++) {\r\n    initialTable[index] = `${x}&${y}`;\r\n    index++;\r\n  }\r\n}\r\n\r\nindex = 0;\r\nvar lostTable = [];\r\n\r\nfor (let y = 0; y < 16; y++) {\r\n  lostTable[index] = `-1&${y}`;\r\n  index++;\r\n}\r\nfor (let y = 0; y < 16; y++) {\r\n  lostTable[index] = `16&${y}`;\r\n  index++;\r\n}\r\nfor (let x = 0; x < 16; x++) {\r\n  lostTable[index] = `${x}&-1`;\r\n  index++;\r\n}\r\nfor (let x = 0; x < 16; x++) {\r\n  lostTable[index] = `${x}&16`;\r\n  index++;\r\n}\r\n\r\nconsole.log(lostTable);\r\n\r\nexport default class Table extends Component {\r\n  state = {\r\n    direction: 0,\r\n    body: [],\r\n    food: \"\",\r\n    lost: false,\r\n    gameStarted: false,\r\n    showRecord: false,\r\n    scores: []\r\n  };\r\n\r\n  validateBody = () => {\r\n    var dirGrowthCurrent = 10; // Guarda la direccion hacia donde crecera el snake\r\n    var body = [];\r\n    initialPositionY = Math.floor(Math.random() * 16);\r\n    initialPositionX = Math.floor(Math.random() * 16);\r\n\r\n    var initialBody = [\r\n      `${initialPositionX.toString()}&${initialPositionY.toString()}`\r\n    ];\r\n\r\n    console.log(\r\n      \"Posicion Inicial: \" + initialPositionX + \" \" + initialPositionY\r\n    );\r\n    // Incio de Loop con initialPositionX y initialPositionY establecidos\r\n    positionX = initialPositionX;\r\n    positionY = initialPositionY;\r\n\r\n    for (let i = 0; i < 2; i++) {\r\n      //Generacion de cada bloque del cuerpo inicial del snake\r\n      ///// Se obtiene la primera direccion a donde debe crecer el cuerpo [0,1,2,3]\r\n      dirGrowthCurrent = this.filterDirection(\r\n        positionX,\r\n        positionY,\r\n        dirGrowthCurrent\r\n      );\r\n      ////// Se guerda la primera direccion de crecimiento\r\n      i === 0 && (firstDirectionGrowth = dirGrowthCurrent);\r\n      /////Actualizacion de Coordenadas\r\n\r\n      [positionX, positionY] = this.updatePosition(\r\n        dirGrowthCurrent,\r\n        positionX,\r\n        positionY\r\n      );\r\n\r\n      ////// Adjunta la nueva posicion al cuerpo del snake\r\n      body = this.attachToBodyArray(initialBody, positionX, positionY, \"back\");\r\n      initialBody = body;\r\n    }\r\n\r\n    // Generacion de la direccion inicial del snake\r\n    ////// Se usa la primera direccion de crecimiento para eliminar su opuesto\r\n    firstDirectionGrowth === 0 && (dirGrowthCurrent = 2);\r\n    firstDirectionGrowth === 1 && (dirGrowthCurrent = 3);\r\n    firstDirectionGrowth === 2 && (dirGrowthCurrent = 0);\r\n    firstDirectionGrowth === 3 && (dirGrowthCurrent = 1);\r\n    ////// Filtrado de la direccion inicial de movimiento\r\n    dirGrowthCurrent = this.filterDirection(\r\n      initialPositionX,\r\n      initialPositionY,\r\n      dirGrowthCurrent\r\n    );\r\n    return [body, dirGrowthCurrent];\r\n  };\r\n\r\n  updatePosition(dirGrowthCurrent, positionX, positionY) {\r\n    switch (dirGrowthCurrent) {\r\n      case 3:\r\n        positionX--;\r\n        break;\r\n      case 0:\r\n        positionY--;\r\n        break;\r\n      case 1:\r\n        positionX++;\r\n        break;\r\n      case 2:\r\n        positionY++;\r\n        break;\r\n      default:\r\n    }\r\n    return [positionX, positionY];\r\n  }\r\n\r\n  filterDirection(initialPositionX, initialPositionY, lastDirection) {\r\n    var dirGrowthFiltered = [];\r\n    var X = this.closureFunction();\r\n\r\n    X(initialPositionX, 15, 0, 1, 3); // filtrado de X\r\n    dirGrowthFiltered = X(initialPositionY, 0, 15, 0, 2); // filtrado de Y\r\n\r\n    dirGrowthFiltered = this.deleteOpositeDirection(\r\n      lastDirection,\r\n      dirGrowthFiltered\r\n    );\r\n\r\n    lastDirection =\r\n      dirGrowthFiltered[Math.floor(Math.random() * dirGrowthFiltered.length)];\r\n    console.log(`El ultimo valor de: ${dirGrowthFiltered}`);\r\n    return lastDirection;\r\n  }\r\n\r\n  deleteOpositeDirection(direction, allowedDirection) {\r\n    switch (direction) {\r\n      case 0:\r\n        return allowedDirection.filter(num => num !== 2);\r\n      case 2:\r\n        return allowedDirection.filter(num => num !== 0);\r\n      case 1:\r\n        return allowedDirection.filter(num => num !== 3);\r\n      case 3:\r\n        return allowedDirection.filter(num => num !== 1);\r\n      default:\r\n        return allowedDirection;\r\n    }\r\n  }\r\n\r\n  closureFunction() {\r\n    let dirGrowth = [0, 1, 2, 3]; // 0:arriba, 1:derecha, 2:abajo, 3: izquierda\r\n\r\n    function filterDirection(\r\n      initialPosition,\r\n      valueCase1,\r\n      valueCase2,\r\n      directionDeleted1,\r\n      directionDeleted2\r\n    ) {\r\n      switch (initialPosition) {\r\n        case valueCase1:\r\n          dirGrowth = dirGrowth.filter(num => num !== directionDeleted1);\r\n          return dirGrowth;\r\n        case valueCase2:\r\n          dirGrowth = dirGrowth.filter(num => num !== directionDeleted2);\r\n          return dirGrowth;\r\n        default:\r\n          return dirGrowth;\r\n      }\r\n    }\r\n    return filterDirection;\r\n  }\r\n\r\n  attachToBodyArray(bodyArray, positionX, positionY, addBlock) {\r\n    let XYCoordinate = `${positionX.toString()}&${positionY.toString()}`;\r\n\r\n    switch (addBlock) {\r\n      case \"front\":\r\n        return [XYCoordinate, ...bodyArray].slice(0, bodyArray.length);\r\n      case \"back\":\r\n        return [...bodyArray, XYCoordinate];\r\n      case \"growth\":\r\n        return [XYCoordinate, ...bodyArray].slice(0, bodyArray.length + 1);\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let [body, direction] = this.validateBody();\r\n    temporaryDiretion = direction;\r\n    this.setState({\r\n      body,\r\n      direction\r\n    });\r\n    console.log(`Su primer movimieto sera hacia: ${direction}`);\r\n\r\n    this.timerID = setInterval(() => {\r\n      this.timeOutHandler();\r\n    }, SPEED);\r\n\r\n    document.addEventListener(\"keydown\", this.keyDownHandler);\r\n    this.getNewFood();\r\n  }\r\n\r\n  // Cada vez que se la cabeza se iguala con la posicion del alimento, se tiene que actualizar el snake\r\n  // Y llamar a la funcion que crea una nueva comida, considerando que el cuerpo ha crecido\r\n  componentDidUpdate = () => {\r\n    //Verificar si perdio\r\n\r\n    if (this.state.food === this.state.body[0]) {\r\n      console.log(\"match\");\r\n      score++;\r\n      this.setState({\r\n        body: this.attachToBodyArray(\r\n          this.state.body,\r\n          initialPositionX,\r\n          initialPositionY,\r\n          \"growth\"\r\n        )\r\n      });\r\n      this.getNewFood();\r\n    }\r\n  };\r\n\r\n  // Se genera una posicion aleatoria para la comida\r\n  getNewFood = () => {\r\n    let match = true;\r\n    let foodIndex;\r\n    let { body } = this.state;\r\n    var updatedTable = initialTable.map(item => {\r\n      return body.includes(item) ? \"filled\" : item;\r\n    });\r\n\r\n    while (match) {\r\n      foodIndex = Math.floor(Math.random() * updatedTable.length);\r\n      updatedTable[foodIndex] === \"filled\" ? (match = true) : (match = false);\r\n    }\r\n    console.log(\"Se creo la comida\");\r\n    console.log(`La comida se encuentra en ${updatedTable[foodIndex]}`);\r\n\r\n    this.setState({\r\n      food: updatedTable[foodIndex]\r\n    });\r\n  };\r\n\r\n  keyDownHandler = ({ key }) => {\r\n    let posibleDirection = this.convertKeytoDirection(key);\r\n\r\n    this.deleteOpositeDirection(this.state.direction, [0, 1, 2, 3]).includes(\r\n      posibleDirection\r\n    ) && (temporaryDiretion = posibleDirection);\r\n  };\r\n\r\n  convertKeytoDirection(key) {\r\n    let direction;\r\n    key === \"ArrowUp\" && (direction = 0);\r\n    key === \"ArrowRight\" && (direction = 1);\r\n    key === \"ArrowDown\" && (direction = 2);\r\n    key === \"ArrowLeft\" && (direction = 3);\r\n    return direction;\r\n  }\r\n\r\n  timeOutHandler() {\r\n    if (this.state.gameStarted) {\r\n      var { body } = this.state;\r\n\r\n      [initialPositionX, initialPositionY] = this.updatePosition(\r\n        temporaryDiretion,\r\n        initialPositionX,\r\n        initialPositionY\r\n      );\r\n\r\n      if (\r\n        body.includes(\r\n          `${initialPositionX.toString()}&${initialPositionY.toString()}`\r\n        )\r\n      ) {\r\n        console.log(\"choco con su propio cuerpo\");\r\n        clearInterval(this.timerID);\r\n        this.setState({\r\n          lost: true,\r\n          scores: [...this.state.scores, score]\r\n        });\r\n      }\r\n\r\n      if (\r\n        lostTable.includes(\r\n          `${initialPositionX.toString()}&${initialPositionY.toString()}`\r\n        )\r\n      ) {\r\n        console.log(\"choco las paredes\");\r\n        clearInterval(this.timerID);\r\n        this.setState({\r\n          lost: true,\r\n          scores: [...this.state.scores, score]\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        body: this.attachToBodyArray(\r\n          body,\r\n          initialPositionX,\r\n          initialPositionY,\r\n          \"front\"\r\n        ),\r\n        direction: temporaryDiretion\r\n      });\r\n    }\r\n  }\r\n\r\n  onStartHandler = () => {\r\n    this.setState({\r\n      gameStarted: true\r\n    });\r\n  };\r\n\r\n  onFinishedHandler = () => {\r\n    console.log(\" Miguel Perdio!!!\");\r\n    score = 0;\r\n    let [body, direction] = this.validateBody();\r\n\r\n    temporaryDiretion = direction;\r\n\r\n    this.timerID = setInterval(() => {\r\n      this.timeOutHandler();\r\n    }, SPEED);\r\n\r\n    this.setState({\r\n      body,\r\n      temporaryDiretion,\r\n      lost: false,\r\n      food: \"\"\r\n    });\r\n    this.getNewFood();\r\n  };\r\n\r\n  onShowRecordHandler = () => {\r\n    this.setState({\r\n      showRecord: true\r\n    });\r\n    console.log(\"presiono ver record\");\r\n  };\r\n  onPlayAgainHandled = () => {\r\n    this.setState({\r\n      showRecord: false,\r\n      gameStarted: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var filteredTable = initialTable.map(item => (\r\n      <div\r\n        className={`square ${this.state.body.includes(item).toString()} ${\r\n          this.state.body[0] === item ? \"initial\" : \"\"\r\n        } ${this.state.food === item ? \"food\" : \"\"}`}\r\n      >\r\n        {item}{\" \"}\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"table\">\r\n          <div className=\"grid-table\">{filteredTable}</div>\r\n        </div>\r\n        {!this.state.gameStarted && (\r\n          <WelcomeModal gameStarted={this.onStartHandler} />\r\n        )}\r\n        {this.state.lost && (\r\n          <GameOverModal\r\n            score={score}\r\n            gameFinished={this.onFinishedHandler}\r\n            scores={this.state.scores}\r\n            showRecord={this.onShowRecordHandler}\r\n          />\r\n        )}\r\n        {this.state.showRecord && (\r\n          <RecordModal\r\n            scores={this.state.scores}\r\n            playgameagain={this.onPlayAgainHandled}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n//Siguientes pasos:\r\n\r\n// Crear componente Button y agregar boton en el modalgmeover para ver el record de puntos\r\n","import React from \"react\";\r\nimport \"./styles/recordmodal.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction RecordModal({ scores, playgameagain }) {\r\n  return (\r\n    <div className=\"RecordModal-modal-box\">\r\n      <div className=\"close-icon\" onClick={playgameagain}>\r\n        <FontAwesomeIcon className=\"icon\" icon={faTimes} />\r\n      </div>\r\n      <h2 className=\"position-table\">Tabla de puntajes</h2>\r\n      {scores.map((item, index) => (\r\n        <ul>{`Intento numero ${index + 1}  :  ${item} ${\r\n          item === 1 ? \"Punto\" : \"Puntos\"\r\n        } `}</ul>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecordModal;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Table from \"./components/Table\";\n\nfunction App() {\n  return (\n    <div className=\"header\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}